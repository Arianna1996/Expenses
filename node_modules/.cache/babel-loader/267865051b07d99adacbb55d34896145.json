{"ast":null,"code":"var _jsxFileName = \"/Users/ariannapavan/Desktop/Expenses/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [data, setData] = useState(\"2020\");\n\n  const nuovaData = data => {\n    setData(data);\n  };\n\n  const datoFiltrato = props.expenses.filter(expense => expense.date.getFullYear().toString() === data);\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Nessun spesa trovata per l'anno selezionato\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 24\n  }, this);\n\n  if (datoFiltrato.length > 0) {\n    expenseContent = datoFiltrato.length > 0 && datoFiltrato.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        onCambiaData: nuovaData,\n        selected: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), expenseContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"YqE2SrXz3R/I1kAFnbfs7oSSWhw=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/ariannapavan/Desktop/Expenses/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseFilter","Card","Expenses","props","data","setData","nuovaData","datoFiltrato","expenses","filter","expense","date","getFullYear","toString","expenseContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,MAAD,CAAhC;;AAEA,QAAMQ,SAAS,GAAIF,IAAD,IAAU;AAC1BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAGA,QAAMG,YAAY,GAAGJ,KAAK,CAACK,QAAN,CAAeC,MAAf,CAClBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CT,IADpC,CAArB;;AAIA,MAAIU,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAEA,MAAIP,YAAY,CAACQ,MAAb,GAAsB,CAA1B,EAA6B;AAC3BD,IAAAA,cAAc,GACZP,YAAY,CAACQ,MAAb,GAAsB,CAAtB,IACAR,YAAY,CAACS,GAAb,CAAkBN,OAAD,iBACf,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHlB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,YADF,CAFF;AAUD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,YAAY,EAAEb,SAA7B;AAAwC,QAAA,QAAQ,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGU,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjCD;;GAAMZ,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport Card from \"../UI/Card\";\nconst Expenses = (props) => {\n  const [data, setData] = useState(\"2020\");\n\n  const nuovaData = (data) => {\n    setData(data);\n  };\n  const datoFiltrato = props.expenses.filter(\n    (expense) => expense.date.getFullYear().toString() === data\n  );\n\n  let expenseContent = <p>Nessun spesa trovata per l'anno selezionato</p>;\n\n  if (datoFiltrato.length > 0) {\n    expenseContent =\n      datoFiltrato.length > 0 &&\n      datoFiltrato.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter onCambiaData={nuovaData} selected={data} />\n        {expenseContent}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}