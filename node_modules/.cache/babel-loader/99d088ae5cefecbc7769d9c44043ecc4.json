{"ast":null,"code":"var _jsxFileName = \"/Users/ariannapavan/Desktop/Expenses/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [data, setData] = useState(\"2020\");\n\n  const nuovaData = data => {\n    setData(data);\n  };\n\n  const datoFiltrato = props.expenses.filter(expense => expense.date.getFullYear().toString() === data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        onCambiaData: nuovaData,\n        selected: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), datoFiltrato.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nessuna spesa per l'anno selezionato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), datoFiltrato.length > 0 && datoFiltrato.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"YqE2SrXz3R/I1kAFnbfs7oSSWhw=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/ariannapavan/Desktop/Expenses/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseFilter","Card","Expenses","props","data","setData","nuovaData","datoFiltrato","expenses","filter","expense","date","getFullYear","toString","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,MAAD,CAAhC;;AAEA,QAAMQ,SAAS,GAAIF,IAAD,IAAU;AAC1BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAGA,QAAMG,YAAY,GAAGJ,KAAK,CAACK,QAAN,CAAeC,MAAf,CAClBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CT,IADpC,CAArB;AAGA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,YAAY,EAAEE,SAA7B;AAAwC,QAAA,QAAQ,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGG,YAAY,CAACO,MAAb,KAAwB,CAAxB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKGP,YAAY,CAACO,MAAb,GAAsB,CAAtB,IACCP,YAAY,CAACQ,GAAb,CAAkBL,OAAD,iBACf,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,OAAO,CAACM,KAFjB;AAGE,QAAA,MAAM,EAAEN,OAAO,CAACO,MAHlB;AAIE,QAAA,IAAI,EAAEP,OAAO,CAACC;AAJhB,SACOD,OAAO,CAACQ,EADf;AAAA;AAAA;AAAA;AAAA,cADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5BD;;GAAMhB,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport Card from \"../UI/Card\";\nconst Expenses = (props) => {\n  const [data, setData] = useState(\"2020\");\n\n  const nuovaData = (data) => {\n    setData(data);\n  };\n  const datoFiltrato = props.expenses.filter(\n    (expense) => expense.date.getFullYear().toString() === data\n  );\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter onCambiaData={nuovaData} selected={data} />\n        {datoFiltrato.length === 0 && (\n          <p>Nessuna spesa per l'anno selezionato</p>\n        )}\n        {datoFiltrato.length > 0 &&\n          datoFiltrato.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}